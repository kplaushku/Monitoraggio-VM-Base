### OBIETTIVO
Creare un workflow YAML per monitorare lo stato delle VM e generare report.


### SCENARIO
Ogni mattina alle 8:00 devi controllare lo stato di tutte le VM critiche e inviare un report.


DATI Known:
	•	name (VM) → es. web-server-01, db-server-01
	•	host → IP o FQDN, es. 192.168.1.10, db01.internal.lan
	•	services → elenco servizi/processi, es. apache2, mysql, redis
	•	script_path → percorso assoluto script, es. /scripts/monitoring/vm_check.py
	•	bot_name → identificativo bot RPA, es. ServiceMonitoring_Bot
	•	repository → repo/progetto bot, es. RPA_ServiceCheck_Repo
	•	api_endpoint → URL API notifiche, es. https://api.company.com/notify
	•	recipients → email destinatari, es. sysadmin@company.com
	•	Campi numerici output (total_vms, online_vms, ecc.) → saranno calcolati dallo script, non riempirli a mano

### STRUTTURA DA COMPLETARE





```yaml
# Workflow: Monitoraggio VM Mattutino
workflow_name: "vm_monitoring_daily"
trigger:
 type: "___________"          # COMPLETA: che tipo di trigger?
 schedule: "___________"      # COMPLETA: quando eseguire?

# CONFIGURAZIONE: VM da monitorare
vm_config:
 critical_vms:
   - name: "___________"      # COMPLETA: nome VM
     host: "___________"      # COMPLETA: host/IP
     services:
       - "___________"        # COMPLETA: servizi da controllare
       - "___________"
   - name: "___________"
     host: "___________"
     services:
       - "___________"
       - "___________"

# PROCESSO: Check VM status (chiamate a script/RPA di monitoraggio)
process_steps:
 - step_name: "check_vm_status"
   action: "call_script"     # CHIAMA script ping/connectivity
   script_path: "___________" # COMPLETA: path script monitoraggio
   method: "___________"     # COMPLETA: metodo check_connectivity
   for_each: "___________"    # COMPLETA: su cosa iteri?
   checks:
     - check_type: "___________"  # COMPLETA: che controlli fai?
       expected: "___________"    # COMPLETA: risultato atteso
     - check_type: "___________"
       expected: "___________"
  
 - step_name: "check_services"
   action: "call_rpa_bot"    # CHIAMA bot RPA per check servizi
   bot_name: "___________"   # COMPLETA: nome bot servizi
   repository: "___________" # COMPLETA: repo con logica servizi
   for_each: "___________"    # COMPLETA
  
 - step_name: "generate_report"
   action: "call_script"     # CHIAMA script generazione report
   script_path: "___________" # COMPLETA: path script report
   template: "___________"   # COMPLETA: template report
   format: "___________"      # COMPLETA: formato report
  
 - step_name: "send_report"
   action: "call_api"        # CHIAMA API email/notification
   api_endpoint: "___________" # COMPLETA: endpoint notifica
   method: "___________"     # COMPLETA: POST per invio
   recipients:
     - "___________"          # COMPLETA: destinatari
   conditions:
     - if: "___________"      # COMPLETA: quando inviare?
       then: "___________"    # COMPLETA: cosa fare?

# OUTPUT: Risultati monitoraggio
output_data:
 report_generated: true
 vm_status_summary:
   total_vms: "___________"   # COMPLETA
   online_vms: "___________"  # COMPLETA
   offline_vms: "___________" # COMPLETA
   issues_found: "___________" # COMPLETA
```

